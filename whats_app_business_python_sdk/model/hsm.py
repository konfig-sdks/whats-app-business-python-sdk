# coding: utf-8

"""
    WhatsApp Business API

    See https://developers.facebook.com/docs/whatsapp

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from whats_app_business_python_sdk import schemas  # noqa: F401


class Hsm(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The containing element for the message content â€” Indicates that the message is highly structured. Parameters contained within provide the structure.
    """


    class MetaOapg:
        required = {
            "localizable_params",
            "namespace",
            "language",
            "element_name",
        }
        
        class properties:
            element_name = schemas.StrSchema
        
            @staticmethod
            def language() -> typing.Type['Language']:
                return Language
            
            
            class localizable_params(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['LocalizableParam']:
                        return LocalizableParam
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['LocalizableParam'], typing.List['LocalizableParam']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'localizable_params':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'LocalizableParam':
                    return super().__getitem__(i)
            namespace = schemas.StrSchema
            __annotations__ = {
                "element_name": element_name,
                "language": language,
                "localizable_params": localizable_params,
                "namespace": namespace,
            }
    
    localizable_params: MetaOapg.properties.localizable_params
    namespace: MetaOapg.properties.namespace
    language: 'Language'
    element_name: MetaOapg.properties.element_name
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["element_name"]) -> MetaOapg.properties.element_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["language"]) -> 'Language': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["localizable_params"]) -> MetaOapg.properties.localizable_params: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["namespace"]) -> MetaOapg.properties.namespace: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["element_name", "language", "localizable_params", "namespace", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["element_name"]) -> MetaOapg.properties.element_name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["language"]) -> 'Language': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["localizable_params"]) -> MetaOapg.properties.localizable_params: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["namespace"]) -> MetaOapg.properties.namespace: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["element_name", "language", "localizable_params", "namespace", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        localizable_params: typing.Union[MetaOapg.properties.localizable_params, list, tuple, ],
        namespace: typing.Union[MetaOapg.properties.namespace, str, ],
        language: 'Language',
        element_name: typing.Union[MetaOapg.properties.element_name, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Hsm':
        return super().__new__(
            cls,
            *args,
            localizable_params=localizable_params,
            namespace=namespace,
            language=language,
            element_name=element_name,
            _configuration=_configuration,
            **kwargs,
        )

from whats_app_business_python_sdk.model.language import Language
from whats_app_business_python_sdk.model.localizable_param import LocalizableParam
